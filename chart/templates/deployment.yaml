apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: {{ .Values.name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.name }}
    spec:
      affinity: {}
      containers:
      - envFrom:
        - configMapRef:
            name: {{ .Values.configmapName }}
        - configMapRef:
            name: {{ .Values.configmapNameForSelf }}
        image: "{{ .Values.images.image }}:{{ .Values.images.tag }}"
        imagePullPolicy: IfNotPresent
        name: {{ .Values.name }}
        ports:
          - containerPort: {{ .Values.port }}
            name: tcp-{{ .Values.port }}
            protocol: TCP
        securityContext:
          privileged: false
        volumeMounts:
        - name: {{ .Values.configmapName }}
          mountPath: /app/conf
      volumes:
      - name: {{ .Values.configmapName }}
        configMap:
          name: {{ .Values.configmapName }}  
      dnsPolicy: ClusterFirst
      #imagePullSecrets:
      #- name: {{ .Values.secrets }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
